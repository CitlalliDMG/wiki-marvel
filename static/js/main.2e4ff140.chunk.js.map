{"version":3,"sources":["assets/Marvel_Wiki_Comics_logo.png","actions.js","reducers/index.js","reducers/data.js","config.js","lib/api.js","sagas.js","store.js","components/layout/SignOutLinks.js","components/layout/Navbar.js","components/home/SearchField.js","components/home/Home.js","components/layout/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","REQUEST_API_DATA","requestApiData","type","combineReducers","data","state","arguments","length","undefined","_ref","config","KEYS","KEY_ONE","KEY_TWO","privateKey","publicKey","URL","timestamp","Date","getTime","HASH","crypto","MD5","AUTH","concat","console","log","lib_api","fetchData","_callee","response2","rawData","message","regenerator_default","a","wrap","_context","prev","next","fetch","sent","json","results","abrupt","t0","stop","this","getApiData","mySaga","action","call","api","put","_marked","_context2","takeLatest","_marked2","sagaMiddleware","createSagaMiddleware","createStore","reducer","applyMiddleware","run","SignedOutLinks","react_default","createElement","NavLink","to","Navbar","className","Link","src","Logo","alt","height","SignOutLinks","SearchField","event","props","getInputToSearch","target","value","preventDefault","onSubmit","bind","for","name","id","initialName","onChange","inputSearch","placeholder","Component","Home","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","comic","comicData","key","thumbnail","path","extension","title","searchString","searchResultList","isLoaded","comics","total","setState","comicResults","home_SearchField","fromSearchField","map","connect","dispatch","bindActionCreators","Footer","href","App","BrowserRouter","layout_Navbar","es","store","home_Home","layout_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2e4ff140.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Marvel_Wiki_Comics_logo.4e053e1c.png\";","export const REQUEST_API_DATA = \"REQUEST_API_DATA\";\nexport const RECEIVE_API_DATA = \"RECEIVE_API_DATA\";\n\nexport const requestApiData = () => ({ type: REQUEST_API_DATA });\nexport const receiveApiData = data => ({ type: RECEIVE_API_DATA, data });\n","import { combineReducers } from \"redux\";\n\nimport data from \"./data\";\n\nexport default combineReducers({\n  data\n});\n","import { RECEIVE_API_DATA } from \"../actions\";\n\n// The reducers receive two parameters a state and an action\nexport default (state = {}, { type, data }) => {\n  switch (type) {\n    case RECEIVE_API_DATA:\n      return data;\n    default:\n      return state;\n  }\n};\n","const config = {\n  KEYS: {\n    KEY_ONE: \"THIS_IS_A_TEST\",\n    KEY_TWO: \"THIS_IS_ANOTHER_TEST\"\n  },\n  privateKey: \"1d4c901adcec4b14717289898f2817c27a5f663a\",\n  publicKey: \"3b46b9c54721040bdc0a44a5758d23c9\"\n};\n\nexport default config;\n","import crypto from \"crypto-js\";\nimport config from \"../config\";\n\n// const BASE_URL = \"https://randomuser.me/api\";\n\nconst URL = () => {\n  const BASE_URL_1 = \"https://gateway.marvel.com:443/v1/public/\";\n  const QUERY = \"comics?format=comic&formatType=comic&dateDescriptor=thisWeek\";\n  const timestamp = new Date().getTime();\n  const HASH = crypto.MD5(timestamp + config.privateKey + config.publicKey);\n  const AUTH = `&ts=${timestamp}&apikey=${config.publicKey}&hash=${HASH}`;\n  console.log(AUTH);\n  return `${BASE_URL_1}${QUERY}${AUTH}`;\n};\n\nclass api {\n  fetchData = async () => {\n    try {\n      // const response = await fetch(`${BASE_URL}`);\n      // const data = await response.json();\n      const response2 = await fetch(URL());\n      const rawData = await response2.json();\n      const data = rawData.data.results;\n      // console.log(data);\n      console.log(data);\n      // return data;\n      return data;\n    } catch (e) {\n      let message = e;\n      return message;\n    }\n  };\n}\n\nexport default new api();\n","import { call, put, takeLatest } from \"redux-saga/effects\";\n\nimport { REQUEST_API_DATA } from \"./actions\";\nimport api from \"./lib/api\";\n\n// Worker Saga: will be fired on RECEIVE_API_DATA actions\nfunction* getApiData(action) {\n  try {\n    // Do API call here\n    const data = yield call(api.fetchData);\n    yield put({ type: \"RECEIVE_API_DATA\", data: data });\n  } catch (e) {\n    console.log(e);\n  }\n}\n\n// Starts fetchUser on the latest dispatched `REQUEST_API_DATA` action.\nfunction* mySaga() {\n  yield takeLatest(REQUEST_API_DATA, getApiData);\n}\n\nexport default mySaga;\n","import { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport reducer from \"./reducers\";\nimport mySaga from \"./sagas\";\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n// mount it on the Store\nexport default createStore(reducer, applyMiddleware(sagaMiddleware));\n\n// then run the saga\nsagaMiddleware.run(mySaga);\n\n// render the application\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n  return (\n    <ul>\n      <li>\n        <NavLink to=\"/\">RegÃ­strate</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/\">Inicia sesiÃ³n</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Logo from \"../../assets/Marvel_Wiki_Comics_logo.png\";\n// import SignedUpLinks from \"./SignInLinks\";\nimport SignedOutLinks from \"./SignOutLinks\";\n\nconst Navbar = () => {\n  return (\n    <header className=\"header-container\">\n      <div className=\"logo\">\n        <Link to=\"/\">\n          <img src={Logo} alt=\"Marvel Comics Logo\" height=\"30\" />\n        </Link>\n      </div>\n      <nav className=\"nav-links\">\n        <SignedOutLinks />\n        {/* <SignedUpLinks /> */}\n      </nav>\n    </header>\n  );\n};\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport propTypes from \"prop-types\";\n\nclass SearchField extends Component {\n  inputSearch(event) {\n    this.props.getInputToSearch(event.target.value);\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    console.log(\"Funciona botÃ³n buscar\");\n    // this.props.doFetch();\n  }\n\n  render() {\n    return (\n      <form className=\"center-form\" onSubmit={this.onSubmit.bind(this)}>\n        <label for=\"comic-search\">Â¿QuÃ© cÃ³mic buscas?</label>\n        <input\n          name=\"comic-search\"\n          className=\"search-bar\"\n          id=\"comic-search\"\n          value={this.props.initialName}\n          onChange={this.inputSearch.bind(this)}\n          type=\"text\"\n          placeholder=\"Ingresa el cÃ³mic buscas\"\n        />\n        <button id=\"searchbutton\" className=\"search-button\" type=\"submit\">\n          Buscar\n        </button>\n      </form>\n    );\n  }\n}\n\nSearchField.propTypes = {\n  inputSearch: propTypes.func\n};\n\nexport default SearchField;\n","import React, { Component } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport { requestApiData } from \"../../actions\";\nimport SearchField from \"./SearchField\";\n\nclass Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      searchString: \"\",\n      searchResultList: [],\n      isLoaded: \"waiting\",\n      comics: [],\n      total: 0\n    };\n  }\n\n  componentDidMount() {\n    this.props.requestApiData();\n  }\n\n  // Get string to search\n  fromSearchField(inputSearch) {\n    this.setState({ searchString: inputSearch });\n  }\n\n  // Search by pokemon name\n  // async fromSearchByName() {\n  //   this.setState({ isLoaded: \"loading\", searchResultList: [] });\n  //   const pokemonData = await api.getByName(this.state.searchString);\n  //   this.setState({ searchResultList: pokemonData.cards });\n  //   this.setState({ isLoaded: \"waiting\" });\n  // }\n\n  comic = comicData => (\n    <div key={comicData.id} className=\"comic\">\n      <img\n        className=\"comic-image\"\n        src={`${comicData.thumbnail.path}/portrait_fantastic.${\n          comicData.thumbnail.extension\n        }`}\n        alt={comicData.title}\n      />\n      <div className=\"comic-info\">\n        <p>{comicData.title}</p>\n      </div>\n    </div>\n  );\n\n  render() {\n    const comicResults = this.props.data;\n    console.log(comicResults);\n    if (comicResults.length > 0) {\n      return (\n        <main className=\"main-container\">\n          <SearchField getInputToSearch={this.fromSearchField.bind(this)} />\n          <section className=\"results-container\">\n            <h1 className=\"title\">Los cÃ³mics mÃ¡s recientes</h1>\n            {comicResults.map(this.comic)}\n          </section>\n        </main>\n      );\n    }\n    return (\n      <main className=\"main-container\">\n        <p>Cargando ...</p>\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({ data: state.data });\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ requestApiData }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home);\n","import React from \"react\";\nconst Footer = () => {\n  return (\n    <footer className=\"footer-container\">\n      <a href=\"http://marvel.com\">\n        Datos proporcionados por Marvel. <br /> Â© 2018 Marvel\n      </a>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./App.css\";\n\nimport store from \"./store\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Home from \"./components/home/Home\";\nimport Footer from \"./components/layout/Footer\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"main-grid\">\n          <Navbar />\n          <Provider store={store}>\n            <Home />\n          </Provider>\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\n// export default () => (\n// <Provider store={store}>\n//   <Home />\n// </Provider>\n// );\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}